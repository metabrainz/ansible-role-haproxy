---
haproxy_repository_key_src: haproxy.asc
haproxy_repository_key_path: /usr/share/keyrings/haproxy.asc

# service options
haproxy_service_enabled: true
haproxy_service_state: started
haproxy_restart_handler_state: restarted
haproxy_reload_handler_state: reloaded

#haproxy_systemd_overrides:
#  Service:
#    LimitNOFILE: 500000
#    ProtectHome: true
#    RestrictFileSystems:
#      - ext4
#      - ext2
#  Unit:
#    After: network.target
haproxy_systemd_overrides: {}
haproxy_group_systemd_overrides: {}
haproxy_host_systemd_overrides: {}

# package options
haproxy_version: 2.5
haproxy_packages:
  - "haproxy={{ haproxy_version }}.*"

# configuration options
haproxy_config_owner: root
haproxy_config_group: root
haproxy_config_mode: "0644"
haproxy_config_backup: false

haproxy_acl_directory: /etc/haproxy/acl.d
haproxy_acl_directory_owner: root
haproxy_acl_directory_group: root
haproxy_acl_directory_mode: "0755"

haproxy_config_global:
  log:
    - /dev/log local0
    - /dev/log local1 notice
  chroot: /var/lib/haproxy
  stats:
    - socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    - timeout 30s
  user: haproxy
  group: haproxy
  daemon: true
  ca-base: /etc/ssl/certs
  crt-base: /etc/ssl/private
  ssl-default-bind-ciphers:
    "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:\
     ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:\
     ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:\
     DHE-RSA-AES256-GCM-SHA384"
  ssl-default-bind-ciphersuites:
    "TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256"
  ssl-default-bind-options: ssl-min-ver TLSv1.2 no-tls-tickets
haproxy_group_config_global: {}
haproxy_host_config_global: {}

haproxy_config_defaults:
  "":
    log: global
    mode: http
    option:
      - httplog
      - dontlognull
    timeout:
      - connect 5000
      - client 50000
      - server 50000
    errorfile:
      - 400 /etc/haproxy/errors/400.http
      - 403 /etc/haproxy/errors/403.http
      - 408 /etc/haproxy/errors/408.http
      - 500 /etc/haproxy/errors/500.http
      - 502 /etc/haproxy/errors/502.http
      - 503 /etc/haproxy/errors/503.http
      - 504 /etc/haproxy/errors/504.http
haproxy_group_config_defaults: {}
haproxy_host_config_defaults: {}

#haproxy_config_frontend:
#  www.mysite.com:
#    bind:
#      - 10.0.0.3:80
#      - 10.0.0.3:443 ssl crt /etc/ssl/certs/mysite.pem
#    http-request: redirect scheme https unless { ssl_fc }
#    use_backend: api_servers if { path_beg /api/ }
#    default_backend: web_servers
haproxy_config_frontend: {}
haproxy_group_config_frontend: {}
haproxy_host_config_frontend: {}

#haproxy_config_backend:
#  web_servers:
#    balance: roundrobin
#    cookie: SERVERUSED insert indirect nocache
#    option: httpchk HEAD /
#    default-server: check maxconn 20
#    server:
#      - server1 10.0.1.3:80 cookie server1
#      - server2 10.0.1.4:80 cookie server2
haproxy_config_backend: {}
haproxy_group_config_backend: {}
haproxy_host_config_backend: {}

#haproxy_config_listen:
#  stats:
#    bind: *:8404
#    stats:
#      - enable
#      - uri /monitor
#      - refresh 5s
haproxy_config_listen: {}
haproxy_group_config_listen: {}
haproxy_host_config_listen: {}

#haproxy_config_resolvers:
#  consul:
#    nameserver: "consul 127.0.0.1:8600"
#    accepted_payload_size: 8192
#    hold: valid 5s
haproxy_config_resolvers: {}
haproxy_group_config_resolvers: {}
haproxy_host_config_resolvers: {}

#haproxy_acls:
#  allowlist: |
#    192.168.1.0/24
#    1.1.1.1
#  blocklist:
#    backup: true
#    file: "haproxy/blocklist.acl"
#  secretlist:
#    mode: "0640"
#    content:
#      - 10.9.8.0/24
#      - 182.168.42.0/24
#  array_example:
#    - 1.1.1.1
#    - 8.8.8.8
haproxy_acls: {}
haproxy_group_acls: {}
haproxy_host_acls: {}

haproxy_acls_backup: false
# https://docs.ansible.com/ansible/latest/collections/ansible/builtin/combine_filter.html#keyword-parameters
haproxy_acls_list_merge: replace
haproxy_acls_recursive_merge: true
