---
- name: Install HAProxy repository key
  copy:
    src: "{{ haproxy_repository_key_src }}"
    dest: "{{ haproxy_repository_key_path }}"
    mode: "0644"

- name: Remove HAProxy repository key from /etc/apt/trusted.gpg.d
  file:
    path: "/etc/apt/trusted.gpg.d/haproxy.gpg"
    state: absent

- name: Remove old HAProxy repository
  apt_repository:
    repo: >-
      deb https://ppa.launchpadcontent.net/vbernat/haproxy-{{ haproxy_version }}/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }} main
    filename: haproxy
    state: absent

- name: Install HAProxy repository
  apt_repository:
    repo: >-
      deb [signed-by={{ haproxy_repository_key_path }}]
      https://ppa.launchpadcontent.net/vbernat/haproxy-{{ haproxy_version }}/{{ ansible_distribution | lower }}
      {{ ansible_distribution_release }} main
    filename: haproxy
    state: present
    update_cache: yes

- name: Install HAProxy
  apt:
    name: "{{ haproxy_packages }}"
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: Divert HAProxy configuration file
  command: >
    dpkg-divert --quiet --local
    --divert /etc/haproxy/haproxy.cfg.dpkg-divert
    --rename /etc/haproxy/haproxy.cfg
  args:
    creates: "/etc/haproxy/haproxy.cfg.dpkg-divert"

- name: Create HAProxy ACL directory
  file:
    path: "{{ haproxy_acl_directory }}"
    owner: "{{ haproxy_acl_directory_owner }}"
    group: "{{ haproxy_acl_directory_group }}"
    mode: "{{ haproxy_acl_directory_mode }}"
    state: directory

- name: Install HAProxy ACLs
  template:
    dest: "{{ haproxy_acl_directory }}/{{ item.key }}"
    src: etc/haproxy/acl.d/acl.j2
    mode: "{{ item.value.mode | d('0644') }}"
    backup: "{{ item.value.backup | d(haproxy_acls_backup) }}"
  loop: "{{ _haproxy_acls | dict2items }}"
  notify: reload haproxy
  vars:
    _haproxy_acls: >-
      {{
        haproxy_acls | combine(
          haproxy_group_acls, haproxy_host_acls,
          list_merge=haproxy_acls_list_merge,
          recursive=haproxy_acls_recursive_merge
        )
      }}

- name: Install HAProxy daemon configuration
  template:
    src: etc/haproxy/haproxy.cfg.j2
    dest: "/etc/haproxy/haproxy.cfg"
    owner: "{{ haproxy_config_owner }}"
    group: "{{ haproxy_config_group }}"
    mode: "{{ haproxy_config_mode }}"
    backup: "{{ haproxy_config_backup }}"
    validate: /usr/sbin/haproxy -c -f %s
  vars:
    _haproxy_config_global: >-
      {{ haproxy_config_global | combine(
        haproxy_group_config_global, haproxy_host_config_global, recursive=True) }}
    _haproxy_config_defaults: >-
      {{ haproxy_config_defaults | combine(
        haproxy_group_config_defaults, haproxy_host_config_defaults, recursive=True) }}
    _haproxy_config_frontend: >-
      {{ haproxy_config_frontend | combine(
        haproxy_group_config_frontend, haproxy_host_config_frontend, recursive=True) }}
    _haproxy_config_backend: >-
      {{ haproxy_config_backend | combine(
        haproxy_group_config_backend, haproxy_host_config_backend, recursive=True) }}
    _haproxy_config_listen: >-
      {{ haproxy_config_listen | combine(
        haproxy_group_config_listen, haproxy_host_config_listen, recursive=True) }}
    _haproxy_config_resolvers: >-
      {{ haproxy_config_resolvers | combine(
        haproxy_group_config_resolvers, haproxy_host_config_resolvers, recursive=True) }}
  notify: reload haproxy

- name: Create HAProxy SystemD service drop-in directory
  file:
    path: /etc/systemd/system/haproxy.service.d
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Create HAProxy SystemD service drop-in file
  template:
    src: etc/systemd/system/haproxy.service.d/ansible.conf.j2
    dest: /etc/systemd/system/haproxy.service.d/ansible.conf
    mode: 0644
  vars:
    _haproxy_systemd_overrides: >-
      {{ haproxy_systemd_overrides |
      combine(haproxy_group_systemd_overrides, recursive=True) |
      combine(haproxy_host_systemd_overrides, recursive=True) }}
  notify:
    - reload systemd
    - restart haproxy

- name: Enable and start HAProxy
  service:
    name: haproxy
    enabled: "{{ haproxy_service_enabled }}"
    state: "{{ haproxy_service_state }}"
  ignore_errors: "{{ ansible_check_mode }}"
