---
- name: Verify
  hosts: all
  gather_facts: false
  tasks:
    - name: Ensure HAProxy is installed
      stat:
        path: "/usr/sbin/haproxy"
      register: result
      changed_when: false
      failed_when: result.stat.isreg is not defined or not result.stat.isreg

    - name: Ensure HAProxy is running
      service:
        name: haproxy
        state: started
      check_mode: true
      register: _haproxy_service
      failed_when: _haproxy_service.changed

    - name: Ensure HAProxy ACLs are correct
      copy:
        dest: "/etc/haproxy/acl.d/{{ item.name }}"
        content: "{{ item.content }}"
        mode: "{{ item.mode | d('0644') }}"
      check_mode: true
      register: _haproxy_acl
      failed_when: _haproxy_acl.changed
      loop:
        - name: allowlist
          content: |
            # Ansible managed: Do NOT edit this file manually!

            1.1.1.1
            8.8.8.8
            9.9.9.9
        - name: blocklist
          content: |
            # Ansible managed: Do NOT edit this file manually!

            10.9.8.7
            192.168.169.170
            127.0.0.1/8
        - name: example
          content: |
            # Ansible managed: Do NOT edit this file manually!

            1.2.3.4
            10.0.0.1/24
          mode: "0640"
        - name: test
          content: |
            # Ansible managed: Do NOT edit this file manually!

            10.0.0.0/8
            192.168.0.0/16

    - name: Ensure HAProxy configuration is correct
      copy:
        src: files/haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        mode: 0644
      check_mode: true
      register: _haproxy_config
      failed_when: _haproxy_config.changed

    - name: Ensure HAProxy SystemD drop-in configuration is correct
      copy:
        src: files/systemd-ansible.conf
        dest: /etc/systemd/system/haproxy.service.d/ansible.conf
        mode: 0644
      check_mode: true
      register: _haproxy_systemd_config
      failed_when: _haproxy_systemd_config.changed
      diff: true

    - name: Ensure HAProxy is responding on configured ports
      command: # noqa command-instead-of-module
        argv:
          - curl
          - -s
          - "http://127.0.0.1:{{ item }}"
      loop:
        - 80
        - 8080
        - 4242
        - 1337
      changed_when: false

    - name: Ensure HAProxy ACL is blocking access to stats endpoint
      command:
        argv:
          - curl
          - -s
          - -o
          - /dev/null
          - -w
          - '%{http_code}'
          - http://localhost:8404
      register: _result
      changed_when: false
      failed_when: '_result.stdout != "403"'
